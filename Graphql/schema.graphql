enum App {
  GEOGRAPHIX
  KINGDOM
  PETRA
}

enum Asset {
  BUSINESS_ASSOCIATE
  DIGITAL_LOG
  DIRECTIONAL_SURVEY
  FORMATION_TOP
  LEGAL_DESCRIPTION
  PRODUCTION
  RASTER_LOG
  STRAT_COLUMN
  WELL_HEADER
}

type Job {
  id: ID!
  rk: String
  app: App!
  assets: String
  aux: String
  label: String
  repo: String!
  modified: String
}

input JobInput {
  id: ID
  rk: String
  app: App
  assets: String
  aux: String
  label: String
  repo: String
}

input KeyPair {
  id: ID!
  rk: String
}

type Mutation {
  createJob(job: JobInput): Job
  updateJob(job: JobInput): Job
  deleteJob(pair: KeyPair): Job
  createNote(note: NoteInput): Note
  deleteNote(pair: KeyPair): Note
  batchDeleteNotes(pairs: [KeyPair]): [Note]
}

type Note {
  id: ID!
  rk: String
  cargo: String
  modified: String
}

input NoteInput {
  id: ID
  rk: String
  cargo: String
}

type Query {
  listJobsByApp(app: App): [Job]
  listNotesByPKey(id: ID): [Note]
}

type Subscription {
  onCreateJob(job: JobInput): Job @aws_subscribe(mutations: ["createJob"])
  onUpdateJob(job: JobInput): Job @aws_subscribe(mutations: ["updateJob"])
  onDeleteJob(job: JobInput): Job @aws_subscribe(mutations: ["deleteJob"])
  onCreateNote(note: NoteInput): Note @aws_subscribe(mutations: ["createNote"])
}
