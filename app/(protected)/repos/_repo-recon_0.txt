import { createClient } from "@/lib/supabase/server";
import { Database } from "@/lib/sb_types.ts";
import { revalidatePath } from "next/cache";

import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";

import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";

const fetchHostnames = async (supabase) => {
  const { data, error } = await supabase.from("workers").select("hostname");
  const hostnames = data.map((x) => String(x.hostname));
  return hostnames;
};

export default async function RepoRecon({ user }: { user: any }) {
  const supabase = createClient();

  const { data, error } = await supabase.from("workers").select("hostname");
  const hostnames = data.map((x) => String(x.hostname));
  //const hostnames = await fetchHostnames(supabase);
  //const hostnames = ["otter", "cat"];

  // const { data, error } = await supabase.rpc("get_geo_type_values");
  // console.log("-------");
  // console.log(data);
  // console.log("-------");

  const createRepoReconTask = async (formData: formData) => {
    "use server";
    console.log("------------------");
    console.log(formData);
    console.log("------------------");

    // let fd = {
    //   task: String(formData.get("task")),
    //   user_id: user.id,
    // };

    //await supabase.from("todos").insert(fd);

    revalidatePath("/todos");
  };

  console.log("##############");
  console.log(typeof hostnames[0]);
  console.log("##############");

  return (
    <form action={createRepoReconTask}>
      {/* <Input name="hostname" placeholder="hostname" className="w-[180px]" /> */}
      <Input name="recon_root" placeholder="recon root" className="w-[180px]" />

      <Select name="geo_type">
        <SelectTrigger className="w-[180px]">
          {/* <SelectValue placeholder="Theme" /> */}
          <SelectValue value={hostnames[0]} />
        </SelectTrigger>
        <SelectContent>
          {hostnames.map((hostname: string) => {
            return (
              <SelectItem key={hostname} value={hostname}>
                {hostname}
              </SelectItem>
            );
          })}

          {/* <SelectItem value="light">Light</SelectItem>
          <SelectItem value="dark">Dark</SelectItem>
          <SelectItem value="system">System</SelectItem> */}
        </SelectContent>
      </Select>

      <Button variant="outline" type="submit">
        do it
      </Button>
    </form>
  );
}
